<?xml version="1.0" encoding="ISO-8859-1"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
             http://www.springframework.org/schema/beans/spring-beans.xsd 
             http://www.springframework.org/schema/context 
             http://www.springframework.org/schema/context/spring-context.xsd 
             http://www.springframework.org/schema/tx
             http://www.springframework.org/schema/tx/spring-tx.xsd
             http://www.springframework.org/schema/aop 
             http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">

    <aop:aspectj-autoproxy/>
    <!-- Aspect -->
    <bean id="loggerAspect" class="br.uff.ic.tpa.smartpet.aspect.LoggerAspect" />

    <!-- Dono -->
    <bean id="donoAppService" class="br.uff.ic.tpa.smartpet.service.DonoAppService">
        <property name="donoDAO" ref="donoDAOImpl" />
    </bean>
    <bean id="donoDAOImpl" class="br.uff.ic.tpa.smartpet.dao.controle.FabricaDeDao"
          factory-method="getDao">
        <constructor-arg value="br.uff.ic.tpa.smartpet.dao.impl.DonoDAOImpl" />
    </bean>

    <!-- Consulta -->
    <bean id="consultaAppService" class="br.uff.ic.tpa.smartpet.service.ConsultaAppService">
        <property name="consultaDAO" ref="consultaDAOImpl" />
    </bean>
    <bean id="consultaDAOImpl" class="br.uff.ic.tpa.smartpet.dao.controle.FabricaDeDao"
          factory-method="getDao">
        <constructor-arg value="br.uff.ic.tpa.smartpet.dao.impl.ConsultaDAOImpl" />
    </bean>

    <!-- Especie -->
    <bean id="especieAppService" class="br.uff.ic.tpa.smartpet.service.EspecieAppService">
        <property name="especieDAO" ref="especieDAOImpl" />
    </bean>
    <bean id="especieDAOImpl" class="br.uff.ic.tpa.smartpet.dao.controle.FabricaDeDao"
          factory-method="getDao">
        <constructor-arg value="br.uff.ic.tpa.smartpet.dao.impl.EspecieDAOImpl" />
    </bean>

    <!-- Paciente -->
    <bean id="pacienteAppService" class="br.uff.ic.tpa.smartpet.service.PacienteAppService">
        <property name="pacienteDAO" ref="pacienteDAOImpl" />
    </bean>
    <bean id="pacienteDAOImpl" class="br.uff.ic.tpa.smartpet.dao.controle.FabricaDeDao"
          factory-method="getDao">
        <constructor-arg value="br.uff.ic.tpa.smartpet.dao.impl.PacienteDAOImpl" />
    </bean>

    <!-- Veterinario -->
    <bean id="veterinarioAppService" class="br.uff.ic.tpa.smartpet.service.VeterinarioAppService">
        <property name="veterinarioDAO" ref="veterinarioDAOImpl" />
    </bean>
    <bean id="veterinarioDAOImpl" class="br.uff.ic.tpa.smartpet.dao.controle.FabricaDeDao"
          factory-method="getDao">
        <constructor-arg value="br.uff.ic.tpa.smartpet.dao.impl.VeterinarioDAOImpl" />
    </bean>

    <!-- Acrescentando o elemento abaixo será registrado automaticamente um 
    bean do tipo PersistenceAnnotationBeanPostProcessor que ficará responsável 
    por injetar um EntityManager diferente, a cada nova transação, nas classes 
    do tipo DAO que utilizam a anotação @PersistenceContext. Anotamos com @Autowired 
    a variável de instância protected da classe JPADAOGenerico. Como todos os 
    DAOs estendem esssa classe essa variável protected estará disponível para 
    todos eles. -->
    <context:annotation-config />

    <!-- Spring provê um fábrica denominada LocalEntityManagerFactoryBean, para 
    que se possa criar um objeto entity manager factory no container IoC. É preciso 
    especificar o nome da unidade de persistência definida no arquivo de configuração 
    da JPA. -->

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="br.uff.ic.tpa_smartpet_jar_1.0-SNAPSHOTPU" />
    </bean>

    <!-- Aqui é preciso declarar uma JpaTransactionManager e habilitar o gerenciamento 
    de transação de forma declarativa com o elemento abaixo. -->
    <tx:annotation-driven />

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

</beans>
